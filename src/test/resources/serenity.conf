webdriver {
  driver = chrome
  use.driver.service.pool = false
  timeouts {
      #implicitlywait = 20000
      #fluentwait = 20000
    }
}
headless.mode = false

#
# Chrome options can be defined using the chrome.switches property
#
chrome.switches="""--window-size=1920,1080;--start-maximized;--disable-features=VizDisplayCompositor;--test-type;--no-sandbox;--ignore-certificate-errors;--disable-popup-blocking;--disable-default-apps;--disable-extensions-file-access-check;--incognito;--disable-infobars,--disable-gpu"""
firefox.switches="""-p=${user.dir}/target/browser_profile/Automation;--window-size=1920,1080;--start-maximized;--disable-features=VizDisplayCompositor;--test-type;--no-sandbox;--ignore-certificate-errors;--disable-popup-blocking;--disable-default-apps;--disable-extensions-file-access-check;--incognito;--disable-infobars,--disable-gpu"""
#chrome.switches=--headless
#
# Define drivers for different platforms. Serenity will automatically pick the correct driver for the current platform
#
drivers {
  windows {
    webdriver.chrome.driver = "src/test/resources/webdriver/windows/chromedriver.exe"
    webdriver.gecko.driver = "src/test/resources/webdriver/windows/geckodriver.exe"
    webdriver.ie.driver = "src/test/resources/webdriver/windows/IEDriverServer.exe"
  }
  mac {
    webdriver.chrome.driver = "src/test/resources/webdriver/mac/chromedriver"
    webdriver.gecko.driver = "src/test/resources/webdriver/mac/geckodriver"
  }
  linux {
    webdriver.chrome.driver = "src/test/resources/webdriver/linux/chromedriver"
    webdriver.gecko.driver = "src/test/resources/webdriver/linux/geckodriver"
  }
}

#
# This section defines environment-specific configuration for different environments.
# You can define normal Serenity properties, such as webdriver.base.url, or custom ones
# You can find more details about this feature at https://johnfergusonsmart.com/environment-specific-configuration-in-serenity-bdd/
#

environments {
  default {
    env = "zta-tme"
    domain = "qa.xcloudiq.com"
    webdriver.base.url = "https://#{env}.#{domain}"
    xiq.env = "tme"
    xiq.base.url = "https://#{xiq.env}.#{domain}"
  }
  all {
    login.page = "#{webdriver.base.url}/login"
    admin.login.page = "#{webdriver.base.url}/ztna-admin/login"
    redirection.page = "#{webdriver.base.url}/authorize-access?redirect_url=/login&return_url=enztna://"
    serenity.restart.browser.for.each=NEVER
    xiq.login = "#{xiq.base.url}/login"
  }

  tme {
      env = "zta-tme"
      xiq.env = "tme"
  }

  dev {
    env = "dev"
    xiq.env = "dis1"
  }
   load {
      env = "zta-qa-loadtesting"
   }
   qa {
      env = "zta-qa"
      xiq.env = "dis1"
   }
  feature-2{
    env = "feature-2.qa"
  }

  feature-3 {
    env = "feature-3"
  }

  feature-2 {
    env = "feature-2"
    xiq.env = "dis1"

  }

  xiq-f-1 {
     env = "feature-1"
     domain = "qa.xcloudiq.com"
  }
}

serenity {
    project.name=ZTNA Web Controller
    serenity.compromised.on = [resource.manager.ResourceException,resource.data.UsedResource, resource.data.MatchingResourceNotFound, resource.data.UnknownResource]
    logging=VERBOSE
    verbose.steps=true
    console.colors=true
    browser {
        maximized= true
    }
    wait.timeout.multiplier=1
}

desktopAgent {
    linux {
        default {
            application {
                binary = "/opt/ExtremeCloud-ZTA/extremecloud-zta"
                go = "/opt/ExtremeCloud-ZTA/resources/assets/wg-goserver"
                process = "extremecloud-zt"
                config = "~/.config/ExtremeCloud-ZTA"
            }
        }
        qa {
            application {
                binary = "/opt/ExtremeCloud-ZTA/ztmesh-extreme"
                go = "/opt/ExtremeCloud-ZTA/resources/assets/wg-goserver"
                process = "ztmesh-extreme"
                config = "~/.config/ExtremeCloud-ZTA"

            }
        }
        driver = "src/test/resources/webdriver/linux/chromedriver87"
    }
    windows {
        default {
            application {
                binary = "${user.home}\\AppData\\Local\\Programs\\ExtremeCloud-ZTA\\ExtremeCloud-ZTA.exe"
                process = "ExtremeCloud-ZTA.exe"
                config = "${user.home}\\AppData\\Roaming\\ExtremeCloud-ZTA"
           }
        }
        driver = "src/test/resources/webdriver/windows/chromedriver87.exe"
    }
    mac {
        default {
            application {
                        binary = "/Applications/ExtremeCloud-ZTA.app"
                        process = "ExtremeCloud-ZTA"
                        config = "${user.home}/Library/Application\\ Support/ExtremeCloud-ZTA"

            }
        }
        driver = "src/test/resources/webdriver/mac/chromedriver87"
    }
}